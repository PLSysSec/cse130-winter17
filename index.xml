<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSE 130</title>
    <link>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/index.xml</link>
    <description>Recent content on CSE 130</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>deian&#43;cse130@cs.ucsd.edu (Deian Stefan)</managingEditor>
    <webMaster>deian&#43;cse130@cs.ucsd.edu (Deian Stefan)</webMaster>
    <lastBuildDate>Mon, 05 Sep 2016 20:19:41 -0700</lastBuildDate>
    <atom:link href="https://cseweb.ucsd.edu/~dstefan/cse130-winter17/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Course organization and policies</title>
      <link>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/about/</link>
      <pubDate>Mon, 05 Sep 2016 20:19:41 -0700</pubDate>
      <author>deian&#43;cse130@cs.ucsd.edu (Deian Stefan)</author>
      <guid>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/about/</guid>
      <description>

&lt;p&gt;The course consists of lectures, written homeworks, and programming
assignments.  The goal of the course is to &lt;strong&gt;(1)&lt;/strong&gt; familiarize you with various
modern programming language concepts and paradigms and &lt;strong&gt;(2)&lt;/strong&gt; get you to think
about and understand the design trade-offs and implementations of different
language features. We will use real-world languages (e.g., JavaScript, Haskell,
and C++) to explore the different concepts. But, we will not cover any one
language in full &amp;ndash; this course is not meant to make you a proficient
programmer, learning how to proficiently program in any of these languages is a
course in of itself.&lt;/p&gt;

&lt;h4 id=&#34;grading&#34;&gt;Grading&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;5% Participation/pre-lecture readings&lt;/li&gt;
&lt;li&gt;30% Homework and programming assignments&lt;/li&gt;
&lt;li&gt;30% Midterm exam&lt;/li&gt;
&lt;li&gt;35% Final exam&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;participation-pre-lecture-readings&#34;&gt;Participation/pre-lecture readings&lt;/h6&gt;

&lt;p&gt;Before each class there will be some assigned reading. You are expected to do
the reading and have at least a vague understanding of the concepts that will
be discussed in class. This will allow us to spend the lecture time to solidify
your understanding.  Asking and answering questions in class, on Piazza, or
during office hours counts towards your class participation.&lt;/p&gt;

&lt;h6 id=&#34;homework-and-programming-assignments&#34;&gt;Homework and programming assignments&lt;/h6&gt;

&lt;p&gt;We will have almost weekly assignments, in the form of written homeworks and/or
programming assignments. These assignments are meant to both reinforce your
knowledge of the concepts covered in lecture and get you to think about PL
beyond lecture (e.g., if you were tasked with designing a new language).&lt;/p&gt;

&lt;p&gt;You are expected to work on written assignments in groups of 3. All written
homework must be typeset and submitted as a PDF using the online submission
tool.  All written assignments must be submitted as a group.&lt;/p&gt;

&lt;p&gt;You are expected to work on the programming assignments by yourself. You may
discuss the assignments with students from the course, in general, but not any
specific solution.&lt;/p&gt;

&lt;p&gt;If you consult anything (books, academic papers, internet resources, people not
in your group) when working on the assignments, note this in your submission.
We encourage outside learning but expect you to not seek out specific details
about a solution &amp;ndash; anything submitted should be considered your own work.
Similarly, you are expected to not publish or otherwise share your solutions at
any point (even after the class is over).&lt;/p&gt;

&lt;p&gt;If you are unsure about what is allowed, please ask the course staff.&lt;/p&gt;

&lt;h6 id=&#34;exams&#34;&gt;Exams&lt;/h6&gt;

&lt;p&gt;The midterm exam will be held on &lt;strong&gt;February 22&lt;/strong&gt;, in class. The midterm is
&lt;strong&gt;closed-book&lt;/strong&gt;, but you may use a double-sided cheat sheet (letter-size).&lt;/p&gt;

&lt;p&gt;The final exam will be held on &lt;strong&gt;March 22&lt;/strong&gt; in &lt;strong&gt;TBD&lt;/strong&gt;. You &lt;strong&gt;must&lt;/strong&gt; take the
exam at this time and location.  The final is &lt;strong&gt;closed-book&lt;/strong&gt;, but you may use
2 double-sided cheat sheets (letter-size).&lt;/p&gt;

&lt;p&gt;The exams will make up 65% of your grade. Since the final is cumulative your
midterm grade will be calculated as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;max( midterm &amp;gt; 0 ?  max(final, midterm) : 0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This means that (1) you basically get a second chance if you don&amp;rsquo;t so well on
the midterm and (2) you must show up to both the midterm and the final.  If you
need to miss either exam because of a documented medical emergency, contact the
instructor immediately.&lt;/p&gt;

&lt;h5 id=&#34;academic-integrity-and-student-conduct&#34;&gt;Academic integrity and student conduct&lt;/h5&gt;

&lt;p&gt;By taking this course, you implicitly agree to abide by the UCSD policies on &lt;a
href=&#34;https://senate.ucsd.edu/Operating-Procedures/Senate-Manual/appendices/2&#34;&gt;Integrity
of Scholarship&lt;/a&gt; and &lt;a
href=&#34;https://students.ucsd.edu/sponsor/student-conduct/&#34;&gt;Student Conduct&lt;/a&gt;.
University rules on integrity of scholarship and code of conduct are taken
seriously and will be enforced.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/syllabus/</link>
      <pubDate>Mon, 05 Sep 2016 20:19:41 -0700</pubDate>
      <author>deian&#43;cse130@cs.ucsd.edu (Deian Stefan)</author>
      <guid>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/syllabus/</guid>
      <description>&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cseweb.ucsd.edu/~dstefan/cse130-winter17/css/bootstrap-table.css&#34;&gt;

&lt;table class=&#34;table table-hover&#34;&gt;
  &lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;Topic and readings&lt;/th&gt;
  &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tr&gt;
    &lt;td colspan=&#34;3&#34; class=&#34;topic&#34;&gt;Functions&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Jan 09&lt;/th&gt;
    &lt;td&gt; 
      Intro and JavaScript crash course
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Jan 11&lt;/th&gt;
    &lt;td&gt;
      Foundations and the lambda calculus
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;info&#34;&gt; &lt;th class=&#34;date&#34;&gt;Jan 16&lt;/th&gt;
    &lt;td&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Martin_Luther_King_Jr.&#34;&gt;MLK&lt;/a&gt;- no class&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Jan 18&lt;/th&gt;
    &lt;td&gt;
      Scope, storage management, and function implementation
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td colspan=&#34;3&#34; class=&#34;topic&#34;&gt;Types&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Jan 23&lt;/th&gt;
    &lt;td&gt;
      Haskell crash course
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Jan 25&lt;/th&gt;
    &lt;td&gt;
      Types, type systems, and ADTs
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Jan 30&lt;/th&gt;
    &lt;td&gt;
      Type polymorphism and type inference
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Feb 01&lt;/th&gt;
    &lt;td&gt;
      Type classes and type traits
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td colspan=&#34;3&#34; class=&#34;topic&#34;&gt;Side-effects and control structures&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Feb 06&lt;/th&gt;
    &lt;td&gt;
      Side-effects and the IO monad
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Feb 08&lt;/th&gt;
    &lt;td&gt;
      Exceptions and error recovery
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Feb 13&lt;/th&gt;
    &lt;td&gt;
      Continuations
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td colspan=&#34;3&#34; class=&#34;topic&#34;&gt;Objects and program organization&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Feb 15&lt;/th&gt;
    &lt;td&gt;
      Objects, encapsulation, and dynamic dispatch
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;info&#34;&gt; &lt;th class=&#34;date&#34;&gt;Feb 20&lt;/th&gt;
    &lt;td&gt; President&#39;s day - no class&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;info&#34;&gt; &lt;th class=&#34;date&#34;&gt;Feb 22&lt;/th&gt;
    &lt;td&gt; Midterm exam &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Feb 27&lt;/th&gt;
    &lt;td&gt; 
      Subtyping and inheritance
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Mar 01&lt;/th&gt;
    &lt;td&gt;
      Memory management and garbage collection
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Mar 06&lt;/th&gt;
    &lt;td&gt;
      Modularity and module systems
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td colspan=&#34;3&#34; class=&#34;topic&#34;&gt;Cross-cutting concerns&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Mar 08&lt;/th&gt;
    &lt;td&gt;
      Memory models and concurrency
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;warning&#34;&gt; &lt;th class=&#34;date&#34;&gt;Mar 13&lt;/th&gt;
    &lt;td&gt;
      STM
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt; &lt;th class=&#34;date&#34;&gt;Mar 15&lt;/th&gt;
    &lt;td&gt; 
      Special topic/Invited talk
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr class=&#34;info&#34;&gt;
    &lt;th class=&#34;date&#34;&gt;Mar 22&lt;/th&gt;
    &lt;td&gt;Final exam&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
Please note that this syllabus is subject to change.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSE 130</title>
      <link>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/index.html</link>
      <pubDate>Tue, 23 Aug 2016 01:59:45 -0700</pubDate>
      <author>deian&#43;cse130@cs.ucsd.edu (Deian Stefan)</author>
      <guid>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/index.html</guid>
      <description>

&lt;p&gt;This course will cover basic concepts and design trade-offs related to
programming languages. The first half of the course focuses on functions,
types, scope, storage management, exceptions, and continuations. The second
half covers object-oriented features and concurrency. We will conclude with a
few special-topics in programming languages. The class also has a number of
small labs where students get to implement some of the language features
discussed in class.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Section ID:&lt;/strong&gt; 895741&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lectures:&lt;/strong&gt; Mondays and Wednesdays, 6:30-7:50PM in Ledden Auditorium&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Section:&lt;/strong&gt; Fridays, 8:00-8:50AM in WLH 2005&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Staff email:&lt;/strong&gt; &lt;a href=&#34;mailto:ucsd-cse130-winter17@googlegroups.com&#34;&gt;ucsd-cse130-winter17@googlegroups.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Piazza:&lt;/strong&gt; &lt;a href=&#34;https://piazza.com/ucsd/winter2017/cse130&#34;&gt;https://piazza.com/ucsd/winter2017/cse130&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;textbook&#34;&gt;Textbook&lt;/h4&gt;

&lt;p&gt;We will be following John Mitchell&amp;rsquo;s &lt;a
href=&#34;https://books.google.com/books?id=AUUgAwAAQBAJ&#34;&gt;Concepts In Programming
Languages&lt;/a&gt; textbook and assigning reading from this book and various other
online resources and papers. Some of the book chapters have been revised, we
will be handing out PDFs of these chapters. Cheaper renting options for the book
seem to be available online (e.g., on &lt;a
href=&#34;https://www.amazon.com/Concepts-Programming-Languages-John-Mitchell-ebook/dp/B00AHTN2TA/ref=mt_kindle?_encoding=UTF8&amp;me=&#34;&gt;Amazon&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;If you are serious about programming languages Benjamin Pierce&amp;rsquo;s &lt;a
href=&#34;https://www.cis.upenn.edu/~bcpierce/tapl/&#34;&gt;Types and Programming
Languages&lt;/a&gt; is a must.&lt;/p&gt;

&lt;h4 id=&#34;course-staff&#34;&gt;Course Staff&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cseweb.ucsd.edu/~dstefan/&#34;&gt;Deian Stefan&lt;/a&gt; (Instructor)&lt;/li&gt;
&lt;li&gt;Mario Alvarez (TA)&lt;/li&gt;
&lt;li&gt;Atyansh Jaiswal (TA)&lt;/li&gt;
&lt;li&gt;Abdul Alkhelaifi (TA)&lt;/li&gt;
&lt;li&gt;Jiashen Wang (TA)&lt;/li&gt;
&lt;li&gt;Matt Chan (tutor)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h4&gt;

&lt;p&gt;This course is based on material from Stanford&amp;rsquo;s, UCSD&amp;rsquo;s, and Tufts&amp;rsquo;
programming languages courses.
Thanks to these fantastic instructors for all their hard work:
&lt;a href=&#34;http://www.cs.tufts.edu/~kfisher/&#34;&gt;Kathleen Fisher&lt;/a&gt;,
&lt;a href=&#34;http://ranjitjhala.github.io/&#34;&gt;Ranjit Jhala&lt;/a&gt;,
&lt;a href=&#34;http://cseweb.ucsd.edu/~lerner/&#34;&gt;Sorin Lerner&lt;/a&gt;,
&lt;a href=&#34;http://theory.stanford.edu/people/jcm/&#34;&gt;John C. Mitchell&lt;/a&gt;,
&lt;a href=&#34;http://www.cs.tufts.edu/~nr/&#34;&gt;Norman Ramsey&lt;/a&gt;, and
&lt;a href=&#34;http://ezyang.com/&#34;&gt;Edward Z. Yang&lt;/a&gt;. Some of the
organizational/administrative things are thanks to &lt;a
href=&#34;http://www.scs.stanford.edu/~dm/&#34;&gt;David Mazières&lt;/a&gt; and &lt;a
href=&#34;http://cseweb.ucsd.edu/~hovav/&#34;&gt;Hovav Shacham&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contact information</title>
      <link>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/contact/</link>
      <pubDate>Tue, 23 Aug 2016 01:59:45 -0700</pubDate>
      <author>deian&#43;cse130@cs.ucsd.edu (Deian Stefan)</author>
      <guid>https://cseweb.ucsd.edu/~dstefan/cse130-winter17/contact/</guid>
      <description>

&lt;p&gt;For general information and questions, please post to the class
&lt;a href=&#34;https://piazza.com/ucsd/winter2017/cse130&#34;&gt;Piazza&lt;/a&gt;.  (It&amp;rsquo;s very likely that
other students will have the same question.) We will post announcements on
Piazza, so please make sure to sign up.  For urgent or personal matters
matters, please post a private question or contact the course staff by email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course staff email address:&lt;/strong&gt; &lt;a href=&#34;mailto:ucsd-cse130-winter17@googlegroups.com&#34;&gt;ucsd-cse130-winter17@googlegroups.com&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;instructor&#34;&gt;Instructor&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; &lt;a href=&#34;https://cseweb.ucsd.edu/~dstefan/&#34;&gt;Deian Stefan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Email:&lt;/strong&gt; &lt;a href=&#34;mailto:deian+cse130@cs.ucsd.edu&#34;&gt;deian+cse130@cs.ucsd.edu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Address:&lt;/strong&gt; CSE 3126&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Office Hours:&lt;/strong&gt; Wed 1:30-2:30PM or by appointment&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;teaching-assistants&#34;&gt;Teaching Assistants&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; Mario M. Alvarez&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Office hours:&lt;/strong&gt; TBA in TBA
&lt;hr/&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; Atyansh Jaiswal (AJ)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Office hours:&lt;/strong&gt; TBA in TBA
&lt;hr/&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; Abdulrahman M. Alkhelaifi (Abdul)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Office hours:&lt;/strong&gt; TBA in TBA
&lt;hr/&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; Jiashen Wang&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Office hours:&lt;/strong&gt; TBA in TBA&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Matthew Chee Long Chan (Matt)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Office hours:&lt;/strong&gt; TBA in TBA&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
